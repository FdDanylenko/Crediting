{"version":3,"sources":["App.js","index.js"],"names":["App","sets","setSets","useState","loanSize","percent","startDate","endDate","accrualsPerYear","indexC","setIndexC","setLoanSize","setPercent","setStartDate","setEndDate","setAccrualsPerYear","method","setMethod","type","setType","term","setTerm","finalResult","setFinalResult","paymentsSchedule","setPaymentsSchedule","formSchedule","termDays","resultSchedule","currentDate","Date","endDateObj","date","setDate","getDate","push","toISOString","slice","daysInMonth","getFullYear","getMonth","nextDate","functionKB","Math","round","functionMB","pow","useEffect","React","createElement","className","map","set","index","onClick","prevSets","newSets","setValues","key","style","color","backgroundColor","onSubmit","e","preventDefault","htmlFor","required","id","value","onChange","target","marginLeft","length","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a7560e2f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [sets, setSets] = useState([\n    {\n      loanSize: \"120000\",\n      percent: 27,\n      startDate: \"2024-01-12\",\n      endDate: \"2024-09-01\",\n      accrualsPerYear: 1,\n    },\n    {\n      loanSize: \"140000\",\n      percent: 25,\n      startDate: \"2024-01-03\",\n      endDate: \"2026-11-15\",\n      accrualsPerYear: 4,\n    },\n    {\n      loanSize: \"150000\",\n      percent: 23,\n      startDate: \"2024-03-05\",\n      endDate: \"2025-12-20\",\n      accrualsPerYear: 2,\n    },\n    {\n      loanSize: \"180000\",\n      percent: 21,\n      startDate: \"2024-04-18\",\n      endDate: \"2027-07-31\",\n      accrualsPerYear: 12,\n    },\n  ]);\n  const [indexC, setIndexC] = useState(0);\n  const [loanSize, setLoanSize] = useState(sets[0].loanSize);\n  const [percent, setPercent] = useState(sets[0].percent);\n  const [startDate, setStartDate] = useState(sets[0].startDate);\n  const [endDate, setEndDate] = useState(sets[0].endDate);\n  const [accrualsPerYear, setAccrualsPerYear] = useState(\n    sets[0].accrualsPerYear\n  );\n  const [method, setMethod] = useState(\"факт/факт\");\n  const [type, setType] = useState(\"КБ\");\n  const [term, setTerm] = useState(0);\n  const [finalResult, setFinalResult] = useState(0);\n  const [paymentsSchedule, setPaymentsSchedule] = useState([]);\n\n  const formSchedule = () => {\n    let termDays = 30;\n    let resultSchedule = [];\n    if (startDate == \"0000-00-00\" || endDate == \"0000-00-00\")\n      return resultSchedule;\n\n    let currentDate = new Date(startDate);\n    let endDateObj = new Date(endDate);\n\n    if (method == \"30/360\") {\n      do {\n        let date = new Date(startDate);\n        date.setDate(date.getDate() + termDays);\n        termDays += 30;\n        resultSchedule.push(date.toISOString().slice(0, 10));\n        if (termDays > term) termDays = term;\n        if (termDays == term) termDays += 10;\n      } while (termDays < term);\n    } else if (method == \"факт/факт\" || method == \"факт/360\") {\n      while (currentDate <= endDateObj) {\n        let daysInMonth = new Date(\n          currentDate.getFullYear(),\n          currentDate.getMonth() + 1,\n          0\n        ).getDate();\n        let nextDate = new Date(currentDate);\n        nextDate.setDate(nextDate.getDate() + daysInMonth);\n        resultSchedule.push(currentDate.toISOString().slice(0, 10));\n        currentDate = nextDate;\n      }\n    }\n    setPaymentsSchedule(resultSchedule);\n  };\n\n  const functionKB = () => {\n    return Math.round(loanSize * (1 + (percent * term) / (360 * 100)));\n  };\n  const functionMB = () => {\n    return Math.round(\n      Math.pow(\n        loanSize * (1 + percent / accrualsPerYear),\n        Math.round(term / 360)\n      )\n    );\n  };\n\n  const reset = () => {\n    setLoanSize(0);\n    setPercent(0);\n    setStartDate(\"0000-00-00\");\n    setEndDate(\"0000-00-00\");\n    setAccrualsPerYear(0);\n    setPaymentsSchedule([]);\n  };\n\n  useEffect(() => {\n    setFinalResult(function () {\n      if (type == \"КБ\") {\n        return functionKB();\n      } else {\n        return functionMB();\n      }\n    });\n    formSchedule();\n  }, [\n    loanSize,\n    percent,\n    term,\n    accrualsPerYear,\n    method,\n    type,\n    functionKB,\n    functionMB,\n  ]);\n\n  useEffect(() => {\n    setTerm((new Date(endDate) - new Date(startDate)) / (1000 * 60 * 60 * 24));\n  }, [startDate, endDate]);\n\n  const setValues = (index) => {\n    setSets((prevSets) => {\n      const newSets = [...prevSets];\n      newSets[indexC] = {\n        loanSize,\n        percent,\n        startDate,\n        endDate,\n        accrualsPerYear,\n      };\n      return newSets;\n    });\n\n    setIndexC(index);\n    setLoanSize(sets[index].loanSize);\n    setPercent(sets[index].percent);\n    setStartDate(sets[index].startDate);\n    setEndDate(sets[index].endDate);\n    setAccrualsPerYear(sets[index].accrualsPerYear);\n    setPaymentsSchedule(formSchedule());\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"form-container\">\n        <div className=\"form-presets\">\n          {sets.map((set, index) => (\n            <button\n              onClick={() => {\n                setValues(index);\n              }}\n              key={index}\n            >\n              Варіант {index + 1}\n            </button>\n          ))}\n          <button\n            style={{ color: \"transparent\", backgroundColor: \"transparent\" }}\n          >\n            PH\n          </button>\n        </div>\n        <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n          <div className=\"form-row\">\n            <label htmlFor=\"loan-size\">{\"Розмір кредиту (грн):\"}</label>\n            <input\n              required\n              id=\"loan-size\"\n              type=\"number\"\n              value={loanSize}\n              onChange={(e) => setLoanSize(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"percent\">{\"Річна ставка (%):\"}</label>\n            <input\n              required\n              id=\"percent\"\n              type=\"number\"\n              value={percent}\n              onChange={(e) => setPercent(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"percent\">{\"Кількість нарахувань за рік:\"}</label>\n            <input\n              required\n              id=\"percent\"\n              type=\"number\"\n              value={accrualsPerYear}\n              onChange={(e) => setAccrualsPerYear(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"loan-term-from\">{\"Термін позички: з\"}</label>\n            <input\n              required\n              id=\"loan-term-from\"\n              type=\"date\"\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n            ></input>\n            <label htmlFor=\"loan-term-to\" style={{ marginLeft: \"15px\" }}>\n              {\"по\"}\n            </label>\n            <input\n              required\n              id=\"loan-term-to\"\n              type=\"date\"\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n            ></input>\n          </div>\n          <div className=\"form-row\">\n            <button\n              onClick={() => {\n                reset();\n              }}\n            >\n              Скинути\n            </button>\n            <select value={method} onChange={(e) => setMethod(e.target.value)}>\n              <option value=\"факт/факт\">факт/факт</option>\n              <option value=\"факт/360\">факт/360</option>\n              <option value=\"30/360\">30/360</option>\n            </select>\n            <select value={type} onChange={(e) => setType(e.target.value)}>\n              <option value=\"КБ\">КБ</option>\n              <option value=\"МБ\">МБ</option>\n            </select>\n            {/* <button onClick={() => console.log(functionMB())}>Обчислити</button> */}\n          </div>\n        </form>\n      </div>\n      <section className=\"result-container\">\n        <div>Сума відсотка: {finalResult - loanSize || 0}</div>\n        <div>Загальний розмір боргу: {finalResult || 0}</div>\n        <div>\n          <div>\n            Графік погашення кредиту з щомісячним поверненням{\" \"}\n            {Math.round(finalResult / paymentsSchedule?.length) || 0} грн:\n          </div>\n          <div className=\"scheduleContainer\">\n            {paymentsSchedule?.length ? (\n              paymentsSchedule.map((date) => (\n                <div className=\"scheduleItem\" key={date}>\n                  {date}\n                </div>\n              ))\n            ) : (\n              <div className=\"scheduleItem\">Немає розкладу</div>\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}